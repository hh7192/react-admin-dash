npx create-create-react-app ./

delete src and public folders

create index.html in public
    add main div with root id

create index.js
    import react and create root

create index.css
    add main styles

create App.jsx
    add boilerplate and export

create componants in pages folder
    home , list , login , new , single

npm install sass : using instead of CSS. 
    SASS: easier, no need to worry of classNames, global vars & funcs, nested styles , etc

create jsx && scss files for each componant.

npm install react-router-dom: for navigating easily between pages
    https://reactrouter.com/docs/en/v6/getting-started/tutorial 
    TOUSE: 
    in App.jsx: 
      import {BrowserRouter, Routes, Route} from "react-router-dom";
      <BrowserRouter>
        <Routes>
            ---DIFINE ROUTES HERE---
          </Route>
        </Routes>
      </BrowserRouter>

create common componants: sidebar , navbar

in Sidebar.jsx:
    logo 
    menu list
    div including color options (light mode and dark mode)

in sidebar.scss:
    style each part of sidebar (top, center, bottom)

npm install @mui/material @emotion/react @emotion/styled npm install @mui/icons-material
    : for using material icons 
    https://mui.com/material-ui/material-icons/ 


FOR PROGRESS BAR:
npm install --save react-circular-progressbar
npm install --save --legacy-peer-deps react-circular-progressbar

FOR CHART:
https://uber.github.io/react-vis/
https://nivo.rocks/ 
https://recharts.org/en-US/ 
https://react-chartjs-2.netlify.app/ 

we use recharts:
    npm install recharts
    npm install --save --legacy-peer-deps recharts

in Chart.jsx:
    import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
    import data
    paste jsx code 

create Table componant.
-------------------------- HOME page is done.
LIST page:
add sidebar and navbar to list page

create dataTable componant
import data table from mui.com 
npm install @mui/x-data-grid

create single page

create new pages

make image display after upload:
    with useState

using react context API for changing the theme
    create context folder in the src
context API allows us to reach data from any componant 
TODO: learn about context API
TODO: learn Redux

2:10:22